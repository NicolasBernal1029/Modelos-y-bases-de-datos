/*
Realizado por 
- Felipe Calvache
- Jeisson Sanchez
*/

-- use musicians
-- Ciclo 1:  TABLAS

CREATE TABLE USUARIO(
    ID VARCHAR(5) NOT NULL,
    FECHA_REGISTRO DATE NOT NULL ,
    CORREO_ELECTRONICO VARCHAR(50) NOT NULL
    );
    
CREATE TABLE OFERTA(
    NUMERO NUMBER(9) NOT NULL,
    FECHA DATE NOT NULL,
    DIRECCION VARCHAR(50)NOT NULL ,
    TIPO_VIVIENDA CHAR(1) NOT NULL,
    COSTO NUMBER(9) NOT NULL, 
    ANEXOS CHAR(1),
    ESTADO CHAR(1) NOT NULL,
    CODIGO_UBICACION VARCHAR(11) NOT NULL,
    ID_USUARIO VARCHAR(5) NOT NULL
    );

CREATE TABLE FOTOGRAFIA(
    NOMBRE VARCHAR(15) NOT NULL,
    RUTA VARCHAR(100) NOT NULL,
    DESCRIPCION VARCHAR(100)NOT NULL
    );
    
CREATE TABLE OPCIONCREDITO(
    PLAZO INT NOT NULL,
    VALOR_MENSUAL NUMBER(9) NOT NULL,
    NUMERO_OFERTA NUMBER(9) NOT NULL
    );

CREATE TABLE OFERTA_FOTOGRAFIA(
    NUMERO_OFERTA NUMBER(9) NOT NULL,
    NOMBRE_FOTOGRAFIA VARCHAR(15) NOT NULL
    );

CREATE TABLE DEMANDA(
    NUMERO NUMBER(9) NOT NULL,
    FECHA DATE NOT NULL,
    TIPO_VIVIENDA CHAR(1) NOT NULL,
    MAX_COMPRA NUMBER(9) NOT NULL,
    ID_USUARIO VARCHAR(5) NOT NULL
    );
  
CREATE TABLE UBICACION(
    CODIGO VARCHAR(11) NOT NULL,
    LATITUD NUMBER(3) NOT NULL,
    LONGITUD NUMBER(3) NOT NULL,
    CIUDAD VARCHAR(10) NOT NULL,
    ZONA CHAR(1) NOT NULL,
    BARRIO VARCHAR(10) NOT NULL
    );

CREATE TABLE INTERES_EN(
    NIVEL CHAR(1) NOT NULL,
    NUMERO_DEMANDA NUMBER(9) NOT NULL,
    CODIGO_UBICACION VARCHAR(11) NOT NULL
    );

CREATE TABLE AVISOS(
    ID INT NOT NULL,
    FECHA_CREACION DATE NOT NULL,
    MENSAJE VARCHAR(25) NOT NULL,
    ESTADO VARCHAR(25) NOT NULL ,
    NUMERO_DEMANDA NUMBER(9) NOT NULL
    );
   
CREATE TABLE NOTIFICACIONES(
    ID_AVISO INT NOT NULL
    );
   
CREATE TABLE ALERTAS(
    ESTADO VARCHAR(20) NOT NULL,
    DATOS_IMPORTANTES VARCHAR(50) NOT NULL,
    HORA DATE NOT NULL,
    ID_AVISO INT NOT NULL
    );
   
CREATE TABLE ORIGEN_FONDOS(
   VALOR NUMBER(9) NOT NULL,
   CREDITO NUMBER(9) NOT NULL,
   ESTA_APROBADO VARCHAR(1) NOT NULL,
   NUMERO_DEMANDA NUMBER(9) NOT NULL
   );
   
CREATE TABLE NUMEROS_CONTACTO(
    ID_USUARIO VARCHAR(5) NOT NULL,
    NUMERO VARCHAR(10) NOT NULL
    );
    
CREATE TABLE PERSONA_NATURAL(
    TIPO_DOCUMENTO VARCHAR(2) NOT NULL,
    NUMERO_DOCUMENTO VARCHAR(10) NOT NULL,
    NOMBRES VARCHAR(20)NOT NULL,
    NACIONALIDAD VARCHAR(10) NOT NULL,
    ID_USUARIO VARCHAR(5) NOT NULL
    );

CREATE TABLE EMPRESA(
    NIT VARCHAR(10) NOT NULL,
    RAZON_SOCIAL VARCHAR(100) NOT NULL,
    ID_USUARIO VARCHAR(5) NOT NULL,
    ID_PERSONA_NATURAL VARCHAR(5) NOT NULL
    );


-- CICLO 1: xTABLAS

-- Eliminar claves foráneas de las tablas que tienen relaciones
ALTER TABLE OPCIONCREDITO DROP CONSTRAINT fk_opcioncredito;
ALTER TABLE OFERTA DROP CONSTRAINT fk_oferta;
ALTER TABLE OFERTA_FOTOGRAFIA DROP CONSTRAINT fk_ofertafotografia1;
ALTER TABLE OFERTA_FOTOGRAFIA DROP CONSTRAINT fk_ofertafotografia2;
ALTER TABLE INTERES_EN DROP CONSTRAINT fk_interes_en;
ALTER TABLE INTERES_EN DROP CONSTRAINT fk_interes_en2;
ALTER TABLE AVISOS DROP CONSTRAINT fk_avisos;
ALTER TABLE NOTIFICACIONES DROP CONSTRAINT fk_notificaciones;
ALTER TABLE ALERTAS DROP CONSTRAINT fk_alertas;
ALTER TABLE ORIGEN_FONDOS DROP CONSTRAINT fk_origen_fondos;
ALTER TABLE NUMEROS_CONTACTO DROP CONSTRAINT fk_numeros_contacto;
ALTER TABLE EMPRESA DROP CONSTRAINT fk_empresa;
ALTER TABLE EMPRESA DROP CONSTRAINT fk_empresa2;


DROP TABLE FOTOGRAFIA;
DROP TABLE OPCIONCREDITO;
DROP TABLE OFERTA_FOTOGRAFIA;
DROP TABLE UBICACION;
DROP TABLE INTERES_EN;
DROP TABLE DEMANDA;
DROP TABLE AVISOS;
DROP TABLE ALERTAS;
DROP TABLE NUMEROS_CONTACTO;
DROP TABLE EMPRESA;
DROP TABLE PERSONA_NATURAL;
DROP TABLE OFERTA;
DROP TABLE NOTIFICACIONES;
DROP TABLE ORIGEN_FONDOS;
DROP TABLE USUARIO;

-- CICLO 1: PoblarOK

INSERT INTO USUARIO VALUES ('U001', TO_DATE('2024-01-15', 'YYYY-MM-DD'), 'usuario1@example.com');
INSERT INTO USUARIO VALUES ('U002', TO_DATE('2024-01-16', 'YYYY-MM-DD'), 'usuario2@example.com');
INSERT INTO USUARIO VALUES ('U003', TO_DATE('2024-01-17', 'YYYY-MM-DD'), 'usuario3@example.com');

INSERT INTO FOTOGRAFIA VALUES ('foto1', '/ruta/foto1.jpg', 'Fotografía de la fachada');
INSERT INTO FOTOGRAFIA VALUES ('foto2', '/ruta/foto2.jpg', 'Fotografía del jardín');
INSERT INTO FOTOGRAFIA VALUES ('foto3', '/ruta/foto3.jpg', 'Fotografía del interior');

INSERT INTO OFERTA VALUES (1001, TO_DATE('2023-10-01', 'YYYY-MM-DD'), 'Calle 1 #23-45', 'A', 500000, 1, 'A', 'UB001', 'U001');
INSERT INTO OFERTA VALUES (1002, TO_DATE('2023-09-20', 'YYYY-MM-DD'), 'Carrera 10 #45-67', 'C', 700000, 0, 'A', 'UB002', 'U002');
INSERT INTO OFERTA VALUES (1003, TO_DATE('2023-08-15', 'YYYY-MM-DD'), 'Avenida 5 #12-34', 'B', 600000, 1, 'A', 'UB003', 'U003');

INSERT INTO OPCIONCREDITO VALUES (12, 40000, 1001);
INSERT INTO OPCIONCREDITO VALUES (24, 35000, 1002);
INSERT INTO OPCIONCREDITO VALUES (36, 30000, 1003);

INSERT INTO OFERTA_FOTOGRAFIA VALUES (1001, 'foto1');
INSERT INTO OFERTA_FOTOGRAFIA VALUES (1002, 'foto2');
INSERT INTO OFERTA_FOTOGRAFIA VALUES (1003, 'foto3');

INSERT INTO DEMANDA VALUES (2001, TO_DATE('2023-09-10', 'YYYY-MM-DD'), 'A', 450000, 'U001');
INSERT INTO DEMANDA VALUES (2002, TO_DATE('2023-08-30', 'YYYY-MM-DD'), 'B', 550000, 'U002');
INSERT INTO DEMANDA VALUES (2003, TO_DATE('2023-07-25', 'YYYY-MM-DD'), 'C', 600000, 'U003');

INSERT INTO UBICACION VALUES ('UB001', 45, 75, 'Ciudad1', 'N', 'Centro');
INSERT INTO UBICACION VALUES ('UB002', 50, 80, 'Ciudad2', 'S', 'Norte');
INSERT INTO UBICACION VALUES ('UB003', 40, 70, 'Ciudad3', 'E', 'Este');

INSERT INTO INTERES_EN VALUES ('A', 2001, 'UB001');
INSERT INTO INTERES_EN VALUES ('B', 2002, 'UB002');
INSERT INTO INTERES_EN VALUES ('C', 2003, 'UB003');

INSERT INTO AVISOS VALUES (3001, TO_DATE('2023-09-01', 'YYYY-MM-DD'), 'Aviso 1', 'Activo', 2001);
INSERT INTO AVISOS VALUES (3002, TO_DATE('2023-08-20', 'YYYY-MM-DD'), 'Aviso 2', 'Pendiente', 2002);
INSERT INTO AVISOS VALUES (3003, TO_DATE('2023-07-30', 'YYYY-MM-DD'), 'Aviso 3', 'Completado', 2003);

INSERT INTO NOTIFICACIONES VALUES (3001);
INSERT INTO NOTIFICACIONES VALUES (3002);
INSERT INTO NOTIFICACIONES VALUES (3003);

INSERT INTO ALERTAS VALUES ('Activo', 'Alerta importante', TO_DATE('2023-10-01 10:00', 'YYYY-MM-DD HH24:MI'), 3001);
INSERT INTO ALERTAS VALUES ('Pendiente', 'Datos críticos', TO_DATE('2023-09-15 15:30', 'YYYY-MM-DD HH24:MI'), 3002);
INSERT INTO ALERTAS VALUES ('Completado', 'Aviso finalizado', TO_DATE('2023-08-20 08:45', 'YYYY-MM-DD HH24:MI'), 3003);

INSERT INTO ORIGEN_FONDOS VALUES (400000, 'Credito Hipotecario', 1, 2001);
INSERT INTO ORIGEN_FONDOS VALUES (450000, 'Credito Personal', 0, 2002);
INSERT INTO ORIGEN_FONDOS VALUES (500000, 'Credito Leasing', 1, 2003);

INSERT INTO NUMEROS_CONTACTO VALUES ('U001', '1234567890');
INSERT INTO NUMEROS_CONTACTO VALUES ('U002', '0987654321');
INSERT INTO NUMEROS_CONTACTO VALUES ('U003', '1122334455');

INSERT INTO PERSONA_NATURAL VALUES ('01', 'CC', 'Juan Perez', 'Colombiano', 'U001');
INSERT INTO PERSONA_NATURAL  VALUES ('03', 'CC', 'Maria Lopez', 'Ecuador', 'U002');
INSERT INTO PERSONA_NATURAL  VALUES ('02', 'CC', 'Cristian Gonzalez', 'Venezolano', 'U003');

-- CICLO 1: PoblarNoOK(2)
-- Al definir que es un char(1) no deja poner "Alto" en el atributo NIVEL ya que solo recibe un caracter.
INSERT INTO INTERES_EN VALUES ('Alto', 2004, 'UB004');

--Al definir ID en AVISOS como INT no debe recibir cadenas de caracteres
INSERT INTO AVISOS VALUES ("DOS", TO_DATE('2023-07-30', 'YYYY-MM-DD'), 'Aviso 4', 'Completado', 2004);

--Al ponerle en TIPO_IDENTIFICACION en PERSONA_NATURAL COMO DATO DE TIPO VARCHAR(2), NO DEBE ACEPTAR MAS DE DOS CARACTERES
INSERT INTO PERSONA_NATURAL  VALUES ('CCC', '04', 'David Gonzalez', 'Venezolano', 'U004');


--CICLO 1: PoblarNoOK(3)
--Deberia existir un aviso con la llave primaria 3005 para que este se pudiera insertar.
INSERT INTO NOTIFICACIONES VALUES (3005);

--Solo deberia recibir los valores N,S,O o E
INSERT INTO UBICACION VALUES ('UB001', 67, 42, 'Ciudad3', 'Z', 'Suba');

--No deberia recibir valores negativos
INSERT INTO ORIGEN_FONDOS VALUES (-500000, 'Credito Leasing', 1, 2003);

-- CICLO 1 : XPoblar


DELETE FROM FOTOGRAFIA;
DELETE FROM OPCIONCREDITO;
DELETE FROM OFERTA_FOTOGRAFIA;
DELETE FROM DEMANDA;
DELETE FROM UBICACION;
DELETE FROM INTERES_EN;
DELETE FROM NOTIFICACIONES;
DELETE FROM ALERTAS;
DELETE FROM ORIGEN_FONDOS;
DELETE FROM NUMEROS_CONTACTO;
DELETE FROM PERSONA_NATURAL;
DELETE FROM EMPRESA;
DELETE FROM AVISOS;
DELETE FROM OFERTA;
DELETE FROM USUARIO;



-- CICLO 1: CRUD: Atributos

ALTER TABLE USUARIO
ADD CONSTRAINT ck_correo CHECK (CORREO_ELECTRONICO LIKE '%@%.%');

ALTER TABLE OFERTA
ADD CONSTRAINT ck_consecutivo CHECK (NUMERO > 0);

ALTER TABLE OFERTA
ADD CONSTRAINT ck_tvivienda CHECK (TIPO_VIVIENDA IN ('C','A','B','F'));

ALTER TABLE OFERTA
ADD CONSTRAINT ck_moneda CHECK (COSTO > 0);

ALTER TABLE OFERTA
ADD CONSTRAINT ck_estado CHECK (ESTADO IN ('D','N','V'));

ALTER TABLE OPCIONCREDITO
ADD CONSTRAINT ck_monedaOC CHECK (VALOR_MENSUAL > 0);

ALTER TABLE DEMANDA
ADD CONSTRAINT ck_consecutivoD CHECK (NUMERO > 0);

ALTER TABLE DEMANDA
ADD CONSTRAINT ck_tviviendaD CHECK (TIPO_VIVIENDA IN ('C','A','B','F'));

ALTER TABLE DEMANDA
ADD CONSTRAINT ck_monedaD CHECK (MAX_COMPRA > 0);

ALTER TABLE UBICACION
ADD CONSTRAINT ck_zona CHECK (ZONA IN ('N','S','O','E'));

ALTER TABLE INTERES_EN
ADD CONSTRAINT ck_nivel CHECK (NIVEL IN ('A','M','B'));

ALTER TABLE ORIGEN_FONDOS
ADD CONSTRAINT ck_monedaO CHECK (VALOR > 0);

ALTER TABLE ORIGEN_FONDOS
ADD CONSTRAINT ck_moneda1 CHECK (ESTA_APROBADO IN ('Y','N'));

  
--  CICLO 1: Primarias

ALTER TABLE USUARIO
ADD CONSTRAINT pk_usuario PRIMARY KEY (ID);

ALTER TABLE FOTOGRAFIA
ADD CONSTRAINT pk_fotografia PRIMARY KEY (NOMBRE);

ALTER TABLE OFERTA
ADD CONSTRAINT pk_oferta PRIMARY KEY (NUMERO);

ALTER TABLE OPCIONCREDITO
ADD CONSTRAINT pk_opcioncredito PRIMARY KEY (NUMERO_OFERTA);
   
ALTER TABLE OFERTA_FOTOGRAFIA
ADD CONSTRAINT pk_ofertafotografia PRIMARY KEY (NUMERO_OFERTA,NOMBRE_FOTOGRAFIA);

ALTER TABLE DEMANDA
ADD CONSTRAINT pk_demanda PRIMARY KEY (NUMERO);

ALTER TABLE UBICACION
ADD CONSTRAINT pk_ubicacion PRIMARY KEY (CODIGO);

ALTER TABLE INTERES_EN
ADD CONSTRAINT pk_interes_en PRIMARY KEY (NUMERO_DEMANDA,CODIGO_UBICACION);

ALTER TABLE AVISOS
ADD CONSTRAINT pk_avisos PRIMARY KEY (ID);
  
ALTER TABLE NOTIFICACIONES
ADD CONSTRAINT pk_notificaciones PRIMARY KEY (ID_AVISO);
 
ALTER TABLE ALERTAS
ADD CONSTRAINT pk_alertas PRIMARY KEY (ID_AVISO);

ALTER TABLE ORIGEN_FONDOS
ADD CONSTRAINT pk_origen_fondos PRIMARY KEY (NUMERO_DEMANDA);

ALTER TABLE NUMEROS_CONTACTO
ADD CONSTRAINT pk_numeros_contacto PRIMARY KEY (ID_USUARIO,NUMERO);

ALTER TABLE PERSONA_NATURAL
ADD CONSTRAINT pk_persona_natural PRIMARY KEY (ID_USUARIO);

ALTER TABLE EMPRESA
ADD CONSTRAINT pk_empresa PRIMARY KEY (ID_USUARIO);


    
-- CICLO 1: Unicas

ALTER TABLE PERSONA_NATURAL
ADD CONSTRAINT uk_persona_natural UNIQUE (TIPO_DOCUMENTO,NUMERO_DOCUMENTO);

ALTER TABLE USUARIO
ADD CONSTRAINT uk_usuario UNIQUE (CORREO_ELECTRONICO);


--  CICLO 1: Foraneas

ALTER TABLE OFERTA
ADD CONSTRAINT fk_oferta FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID); 

ALTER TABLE OPCIONCREDITO
ADD CONSTRAINT fk_opcioncredito FOREIGN KEY(NUMERO_OFERTA) REFERENCES OFERTA(NUMERO);

ALTER TABLE OFERTA_FOTOGRAFIA
ADD CONSTRAINT fk_ofertafotografia1 FOREIGN KEY(NUMERO_OFERTA) REFERENCES OFERTA(NUMERO);

ALTER TABLE OFERTA_FOTOGRAFIA
ADD CONSTRAINT fk_ofertafotografia2 FOREIGN KEY(NOMBRE_FOTOGRAFIA) REFERENCES FOTOGRAFIA(NOMBRE); 

ALTER TABLE INTERES_EN
ADD CONSTRAINT fk_interes_en FOREIGN KEY (NUMERO_DEMANDA) REFERENCES DEMANDA(NUMERO);
    
ALTER TABLE INTERES_EN
ADD CONSTRAINT fk_interes_en2 FOREIGN KEY (CODIGO_UBICACION) REFERENCES UBICACION(CODIGO);

ALTER TABLE AVISOS
ADD CONSTRAINT fk_avisos FOREIGN KEY (NUMERO_DEMANDA) REFERENCES DEMANDA(NUMERO);

ALTER TABLE NOTIFICACIONES
ADD CONSTRAINT fk_notificaciones FOREIGN KEY (ID_AVISO) REFERENCES AVISOS(ID);

ALTER TABLE ALERTAS
ADD CONSTRAINT fk_alertas FOREIGN KEY (ID_AVISO) REFERENCES AVISOS(ID);

ALTER TABLE ORIGEN_FONDOS
ADD CONSTRAINT fk_origen_fondos FOREIGN KEY (NUMERO_DEMANDA) REFERENCES DEMANDA(NUMERO);

ALTER TABLE NUMEROS_CONTACTO
ADD CONSTRAINT fk_numeros_contacto FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID);

ALTER TABLE PERSONA_NATURAL
ADD CONSTRAINT fk_persona_natural FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID);

ALTER TABLE EMPRESA
ADD CONSTRAINT fk_empresa FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID);
    
ALTER TABLE EMPRESA
ADD CONSTRAINT fk_empresa2 FOREIGN KEY (ID_PERSONA_NATURAL) REFERENCES PERSONA_NATURAL(ID_USUARIO);
    
-- CICLO 1: PoblarNoOK(2)

--Deberia existir un aviso con la llave primaria 3005 para que este se pudiera insertar.
-- Nombre de la restriccion: FK_NOTIFICACIONES 
INSERT INTO NOTIFICACIONES VALUES (3005);


--Solo deberia recibir los valores N,S,O o E
-- Nombre de la restriccion: CK_ZONA
INSERT INTO UBICACION VALUES ('UB001', 67, 42, 'Ciudad3', 'Z', 'Suba');

--No deberia recibir valores negativos
-- Nombre de la restriccion: CK_MONEDAO
INSERT INTO ORIGEN_FONDOS VALUES (-500000, 'Credito Leasing', 1, 2003);



 
 
 
-- CICLO 1: Consultar los usuarios con la mayor cantidad de ofertas disponibles

SELECT U.ID, U.CORREO_ELECTRONICO, COUNT(O.NUMERO) AS NUMERO_OFERTAS
    FROM USUARIO U
    JOIN OFERTA O ON U.ID = O.ID_USUARIO
    GROUP BY U.ID, U.CORREO_ELECTRONICO
    ORDER BY NUMERO_OFERTAS DESC;

-- CICLO 1: Consultar los numeros de telefono de un usuario, buscando por su correo electronico

SELECT NC.NUMERO
    FROM NUMEROS_CONTACTO NC
    JOIN USUARIO U ON NC.ID_USUARIO = U.ID
    WHERE U.CORREO_ELECTRONICO = 'usuario@example.com'; -- Reemplaza 'usuario@example.com' por el correo que desees buscar



-- Ciclo 1: Tuplas

-- Ciclo 1: TuplasOK
INSERT INTO OFERTA (DIRECCION, TIPO_VIVIENDA, COSTO, ANEXOS, CODIGO_UBICACION, ID_USUARIO)
VALUES ('Calle 123', 'A', 150000, 'N', 'UB001', 'U001');


INSERT INTO UBICACION (CODIGO, LATITUD, LONGITUD, CIUDAD, ZONA, BARRIO)
VALUES ('COD001', 134, 578, 'Ciudad', 'S', 'Barrio');

-- Ciclo 1: TuplasNoOK

INSERT INTO UBICACION (CODIGO, LATITUD, LONGITUD, CIUDAD, ZONA, BARRIO)
VALUES ('COD002', 184, 599, 'Ciudad', 'A', 'Barrio');

INSERT INTO OFERTA (DIRECCION, TIPO_VIVIENDA, COSTO, ANEXOS, CODIGO_UBICACION, ID_USUARIO)
VALUES ('Calle 123', 'A', 150000, 'N', 'UB001', 'U0010');


-- Ciclo 1: Disparadores

/*Caso de uso 1: Registar Oferta
Adicionar:
El número, fecha y estado de la oferta es autogenerado
Se asume que todas las viviendas tienen una opción de crédito a 12 meses con
cuotas mensuales equivalentes al costo más 10% dividido en 12.
*/




CREATE TRIGGER TR_OFERTA_BI
BEFORE INSERT ON OFERTA
FOR EACH ROW 
BEGIN
    SELECT NVL(MAX(numero), 0) + 1 INTO :NEW.numero FROM OFERTA;
    :NEW.fecha := SYSDATE;
    :NEW.estado := 'D';
END;

CREATE TRIGGER TR_OFERTA_AI
AFTER INSERT ON OFERTA
FOR EACH ROW
DECLARE
    valorMensual NUMBER;
BEGIN
    -- Calcular el valor mensual
    valorMensual := (:NEW.costo * 1.10) / 12;

    -- Insertar en la tabla OPCIONCREDITO
    INSERT INTO OPCIONCREDITO (plazo, valor_mensual, numero_oferta)
    VALUES (12, valorMensual, :NEW.numero);
END;

/*Modificar:
Solo se pueden modificar los anexos, las fotografías y la opción de crédito
Se pueden adicionar o eliminar fotografías a la galeria
Se puede eliminar la opción de crédito o modificar las condiciones. Las cuotas por el número 
de meses debe ser mayor o igual al costo
*/


CREATE TRIGGER TR_OFERTA_BU
BEFORE UPDATE ON OFERTA
FOR EACH ROW
BEGIN
    -- Verificar si se está intentando actualizar un campo no permitido
    IF UPDATING('NUMERO') OR UPDATING('FECHA') OR UPDATING('DIRECCION') OR 
       UPDATING('TIPOVIVIENDA') OR UPDATING('COSTO') OR UPDATING('ESTADO') THEN
        RAISE_APPLICATION_ERROR(-20001, 'Solo se pueden modificar los campos ANEXOS, FOTOGRAFIAS y OPCION DE CREDITO');
    END IF;
END;

CREATE  TRIGGER TR_OFERTA_FOTOGRAFIA_BU
BEFORE UPDATE ON OFERTA_FOTOGRAFIA
FOR EACH ROW
BEGIN
    RAISE_APPLICATION_ERROR(-20004, 'No se permite modificar la galeria. Solo se pueden adicionar o eliminar fotos de la galeria.');
END;


CREATE  TRIGGER TR_OPCIONCREDITO_BU
BEFORE UPDATE ON OPCIONCREDITO
FOR EACH ROW
DECLARE
    costo_oferta NUMBER;
    cuotas_mensuales NUMBER;
BEGIN
    -- Obtener el costo de la oferta correspondiente
    SELECT costo INTO costo_oferta
    FROM OFERTA
    WHERE NUMERO = :OLD.NUMERO_OFERTA;

    -- Calcular las cuotas mensuales
    cuotas_mensuales := :NEW.VALOR_MENSUAL * :NEW.PLAZO;

    -- Validar la condición
    IF cuotas_mensuales < costo_oferta THEN
        RAISE_APPLICATION_ERROR(-20001, 'Las cuotas por el número de meses deben ser mayores o iguales al costo.');
    END IF;
END;


/*
Eliminar:
Una oferta puede ser eliminada siempre y cuando sea la última
*/

/*CREATE TRIGGER TR_OFERTA_BD
BEFORE DELETE ON OFERTA
FOR EACH ROW
DECLARE
    max_num NUMBER;
BEGIN
    -- Obtener el número máximo antes de la eliminación
    SELECT MAX(NUMERO) INTO max_num FROM OFERTA;
    -- Permitir la eliminación solo si es la última oferta
    IF :OLD.NUMERO != max_num THEN
        RAISE_APPLICATION_ERROR(-20002, 'No se puede eliminar la oferta porque no es la última registrada.');
    END IF;
END; */


/*
Caso de uso 1: Registar Demanda

ADICIONAR
El número y la fecha se generan automáticamente
Si no se indica el tipo de vivienda, se asume que es casa.
Se asume que solicitó un prestamo por el valor total de la compra.
*/


CREATE TRIGGER TR_DEMANDA_BI
BEFORE INSERT ON DEMANDA
FOR EACH ROW 
BEGIN
    SELECT NVL(MAX(numero), 0) + 1 INTO :NEW.numero FROM DEMANDA;
    :NEW.fecha := SYSDATE;
    IF :NEW.tipo_vivienda IS NULL THEN
        :NEW.tipo_vivienda := 'C';
    END IF;
    INSERT INTO ORIGEN_FONDOS (VALOR, CREDITO, ESTA_APROBADO, NUMERO_DEMANDA)
    VALUES (:NEW.max_compra, :NEW.max_compra, 'N', :NEW.numero);
    
END;



/*MODIFICAR
Puede indicar si el prestamo fue aprobado o no.
Puede adicionar ubicaciones de interés, no eliminarlas ni modificarlas.*/

CREATE TRIGGER TR_UBICACION_BI
BEFORE INSERT ON UBICACION
FOR EACH ROW
BEGIN

    DECLARE
        v_count NUMBER;
    BEGIN
        SELECT COUNT(*) INTO v_count
        FROM UBICACION
        WHERE CODIGO = :NEW.CODIGO;

        IF v_count > 0 THEN
            RAISE_APPLICATION_ERROR(-20001, 'El código de ubicación ya existe. No se pueden duplicar códigos.');
        END IF;
    END;

END;


CREATE TRIGGER TR_UBICACION_BD
BEFORE DELETE OR UPDATE ON UBICACION
FOR EACH ROW
BEGIN
    RAISE_APPLICATION_ERROR(-20002, 'No se permite eliminar ni modificar ubicaciones.');
END;



/*ELIMINAR
Únicamente se pueden eliminar, si es la ultima demanda. */



-- Ciclo 1: DisparadoresOK


-- El número, fecha y estado de la oferta es autogenerado
INSERT INTO OFERTA (DIRECCION, TIPO_VIVIENDA, COSTO, ANEXOS, CODIGO_UBICACION, ID_USUARIO)
VALUES ('Calle 127', 'C', 180000, 'N', 'UB003', 'U003');

SELECT * FROM OFERTA;

 


-- Ciclo 1: Xdisparadores

DROP TRIGGER TR_OFERTA_BI;
DROP TRIGGER TR_OFERTA_AI;
DROP TRIGGER TR_OFERTA_BU;
DROP TRIGGER TR_OFERTA_FOTOGRAFIA_BU;
DROP TRIGGER TR_OPCIONCREDITO_BU;
DROP TRIGGER TR_OFERTA_BD;

DROP TRIGGER TR_DEMANDA_BI;
DROP TRIGGER TR_UBICACION_BI;
DROP TRIGGER TR_UBICACION_BD;